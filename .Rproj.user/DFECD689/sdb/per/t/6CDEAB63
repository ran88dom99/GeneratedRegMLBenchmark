{
    "collab_server" : "",
    "contents" : "simScores<-matrix(data = 0, nrow = 100, ncol = 12, byrow = FALSE,dimnames = NULL);\nsimScores[,11]<-1;###!!!!!!! this may be necessary for many algorithms\n#vector of strings to keep names of each project, increase maximum\ngens.names=vector(length = 100)\n#single scalar to keep count\ngen.count=0\n\n############from latent features######\ngen.count=gen.count+1\ngens.names[gen.count]=\"basic latent features\"\n\nsimPubs<-matrix(data = 0, nrow = 10, ncol = 3, byrow = FALSE,dimnames = NULL)\nsimGames<-matrix(data = 0, nrow = 100, ncol = 3, byrow = FALSE,dimnames = NULL)\nsimScores<-matrix(data = 0, nrow = 100, ncol = 11, byrow = FALSE,dimnames = NULL)\n\nfor(Col in 1:10)\n{simPubs[Col,1:3]=rnorm(3, mean = 0, sd = 1)}\nfor(Row in 1:100)\n{simGames[Row,1:3]=rnorm(3, mean = 0, sd = 1)}\n\nfor(Col in 1:10){\n  for(Row in 1:100){\n    simScores[Row,Col]=sum(simPubs[Col,1]*simGames[Row,1],simPubs[Col,2]*simGames[Row,2],simPubs[Col,3]*simGames[Row,3])\n  }}\n\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\", sep = \"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n\n\n#######just random#########\ngen.count=gen.count+1\ngens.names[gen.count]=\"just random\"\nfor(Row in 1:100){\n  simScores[Row,1:10]=rnorm(10, mean = 0, sd = 1)\n}\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\",sep=\"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n\n\n\n########polynomial C1 ^ 2#######\ngen.count=gen.count+1\ngens.names[gen.count]=\"polynomial C1 ^ 2\"\nfor(Row in 1:100){\n  simScores[Row,1:10]=rnorm(10, mean = 0, sd = 1)\n}\nfor(Row in 1:100){\n  simScores[Row,8]=simScores[Row,1]*simScores[Row,1]\n}\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\",sep=\"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n########polynomial C1 ^ .5#######\ngen.count=gen.count+1\ngens.names[gen.count]=\"polynomial C1 ^ .5\"\nfor(Row in 1:100){\n  simScores[Row,1:10]=rnorm(10, mean = 0, sd = 1)\n}\nfor(Row in 1:100){\n  simScores[Row,8]=simScores[Row,1]^.5\n}\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\",sep=\"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n########polynomial C1 ^ -2#######\ngen.count=gen.count+1\ngens.names[gen.count]=\"polynomial C1 ^ -2\"\nfor(Row in 1:100){\n  simScores[Row,1:10]=rnorm(10, mean = 0, sd = 1)\n}\nfor(Row in 1:100){\n  simScores[Row,8]=simScores[Row,1]^-2\n}\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\",sep=\"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n\n########polynomial C1 t C2 ########\ngen.count=gen.count+1\ngens.names[gen.count]=\"polynomial C1 t C2\"\nfor(Row in 1:100){\n  simScores[Row,1:10]=rnorm(10, mean = 0, sd = 1)\n}\nfor(Row in 1:100){\n  simScores[Row,8]=simScores[Row,2]*simScores[Row,1]\n}\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\",sep=\"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n########polynomial C1 ^ C2######\ngen.count=gen.count+1\ngens.names[gen.count]=\"polynomial C1 ^ C2\"\nfor(Row in 1:100){\n  simScores[Row,1:10]=rnorm(10, mean = 0, sd = 1)\n}\nfor(Row in 1:100){\n  simScores[Row,8]=simScores[Row,1]^simScores[Row,2]\n}\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\",sep=\"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n########polynomial C1 t C2 t C3#######\ngen.count=gen.count+1\ngens.names[gen.count]=\"polynomial C1 t C2 t C3\"\nfor(Row in 1:100){\n  simScores[Row,1:10]=rnorm(10, mean = 0, sd = 1)\n}\nfor(Row in 1:100){\n  simScores[Row,8]=simScores[Row,2]*simScores[Row,1]*simScores[Row,3]\n}\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\",sep=\"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n########polynomial C1 t C2 t C3^1d3######\ngen.count=gen.count+1\ngens.names[gen.count]=\"polynomial C1 t C2 t C3^1d3\"\nfor(Row in 1:100){\n  simScores[Row,1:10]=rnorm(10, mean = 0, sd = 1)\n}\nfor(Row in 1:100){\n  simScores[Row,8]=simScores[Row,2]*simScores[Row,1]*simScores[Row,3]^(1/3)\n}\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\",sep=\"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n#####mean subtraction in each row####\ngen.count=gen.count+1\ngens.names[gen.count]=\"mean subtraction in each row\"\nfor(Row in 1:100){\n  simScores[Row,1:10]=rnorm(10, mean = 0, sd = 1)\n  me.sim.sub=mean(simScores[Row,1:10],na.rm=T)\n  for(Col in 1:10){\n    simScores[Row,Col]=simScores[Row,Col]-me.sim.sub\n  }}\n\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\",sep=\"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n#######median subtraction in each row######\ngen.count=gen.count+1\ngens.names[gen.count]=\"median subtraction in each row\"\nfor(Row in 1:100){\n  simScores[Row,1:10]=rnorm(10, mean = 0, sd = 1)\n  me.sim.sub=median(simScores[Row,1:10],na.rm=T)\n  for(Col in 1:10){\n    simScores[Row,Col]=simScores[Row,Col]-me.sim.sub\n  }}\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\",sep=\"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n\n#####switches between 1 & -1 based on C1######\ngen.count=gen.count+1\ngens.names[gen.count]=\"switches between 1 & -1 based on C1\"\nfor(Row in 1:100){\n  simScores[Row,1:10]=rnorm(10, mean = 0, sd = 1)\n}\nfor(Row in 1:100){\n  if(simScores[Row,1]>.5){\n    simScores[Row,8]=-1\n  }else{\n    simScores[Row,8]=1\n  }\n}\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\",sep=\"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n\n#####switches between C2 & -C2 based on C1####\ngen.count=gen.count+1\ngens.names[gen.count]=\"switches between C2 & -C2 based on C1\"\nfor(Row in 1:100){\n  simScores[Row,1:10]=rnorm(10, mean = 0, sd = 1)\n}\nfor(Row in 1:100){\n  if(simScores[Row,1]>.5){\n    simScores[Row,8]=-simScores[Row,2]\n  }else{\n    simScores[Row,8]=simScores[Row,2]\n  }\n}\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\",sep=\"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n#####switches between C2+C3 & C4+C5 based on C1#########\ngen.count=gen.count+1\ngens.names[gen.count]=\"switches between C2+C3 & C4+C5 based on C1\"\nfor(Row in 1:100){\n  simScores[Row,1:10]=rnorm(10, mean = 0, sd = 1)\n}\nfor(Row in 1:100){\n  if(simScores[Row,1]>.5){\n    simScores[Row,8]=simScores[Row,2]+simScores[Row,3]\n  }else{\n    simScores[Row,8]=simScores[Row,5]+simScores[Row,6]\n  }\n}\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\",sep=\"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n#####smoothed switches between -C2-C3 & C2+C3 based on C1#####\ngen.count=gen.count+1\ngens.names[gen.count]=\"smoothed switches between -C2-C3 & C2+C3 based on C1\"\nfor(Row in 1:100){\n  simScores[Row,1:10]=rnorm(10, mean = 0, sd = 1)\n}\nfor(Row in 1:100){\n  if(simScores[Row,1]>.5){\n    simScores[Row,8]=-simScores[Row,2]-simScores[Row,3]\n  }else{\n    simScores[Row,8]=simScores[Row,2]+simScores[Row,3]\n  }\n  if((simScores[Row,1]>.0)&&(simScores[Row,1]<.5)){\n    simScores[Row,8]=-simScores[Row,2]*.1-simScores[Row,3]*.1\n  }\n  if((simScores[Row,1]>-.5)&&(simScores[Row,1]<.0)){\n    simScores[Row,8]=simScores[Row,2]*.1+simScores[Row,3]*.1\n  }\n}\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\",sep=\"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n#####switches between -C2-C3 & C2+C3 based on C1####\ngen.count=gen.count+1\ngens.names[gen.count]=\"switches between -C2-C3 & C2+C3 based on C1\"\nfor(Row in 1:100){\n  simScores[Row,1:10]=rnorm(10, mean = 0, sd = 1)\n}\nfor(Row in 1:100){\n  if(simScores[Row,1]>.5){\n    simScores[Row,8]=-simScores[Row,2]-simScores[Row,3]\n  }else{\n    simScores[Row,8]=simScores[Row,2]+simScores[Row,3]\n  }\n}\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\",sep=\"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n#####randomly switches between C1 & C2#####\ngen.count=gen.count+1\ngens.names[gen.count]=\"randomly switches between C1 & C2\"\nfor(Row in 1:100){\n  simScores[Row,1:10]=rnorm(10, mean = 0, sd = 1)\n}\nfor(Row in 1:100){\n  if(simGames[Row,1]>.5){\n    simScores[Row,8]=simScores[Row,1]\n  }else{\n    simScores[Row,8]=simScores[Row,2]\n  }\n}\nwrite.table(round(simScores,digits  = 3),\n            file = paste(gens.names[gen.count],\".csv\",sep=\"\"), append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = F,\n            col.names = F, qmethod = \"double\")\n\n#####write alg names to file; last######\nwrite.table(gens.names,\n            file = \"gens names.csv\", append =F, quote = F, sep = \",\",\n            eol = \"\\n\", na = \"\", dec = \".\", row.names = T,\n            col.names = F, qmethod = \"double\")\n",
    "created" : 1501666585409.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "565948885",
    "id" : "6CDEAB63",
    "lastKnownWriteTime" : 1501666058,
    "last_content_update" : 1501666058,
    "path" : "C:/Users/Dm/Desktop/generated data test/Multiple Generators.R",
    "project_path" : "Multiple Generators.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}